language: cpp

matrix:
  include:
    - os: linux
      compiler: gcc
      dist: trusty
      sudo: required
      env:
        - BUILD_NAME=trusty

    - os: osx
      compiler: clang
      env:
        - BUILD_NAME=osx

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq update; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade; fi
# Homebrew upgrade disabled to save time.

install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]];
      then 
          sudo apt-get install build-essential git cmake qt5-default libpng-dev  libnova-dev libproj-dev zlib1g-dev libbz2-dev qttools5-dev-tools qttools5-dev;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then grep -q trusty /etc/lsb-release || sudo apt-get install libopenjpeg-dev || true; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]];
      then 
          if [[ "$BUILD_NAME" == "trusty" ]]; 
          then
              wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz;
              tar xf v2.3.0.tar.gz;
              cd openjpeg-2.3.0;
              mkdir build;
              cd build;
              cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_CODEC=OFF -DOPJ_USE_THREAD=OFF;
              make;
              sudo make install;
              cd ../..;
          fi;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap indilib/indi; brew install git cmake libnova openjpeg libpng qt5; export PATH="/usr/local/opt/qt5/bin:$PATH";  echo 'export PATH="/usr/local/opt/qt5/bin:$PATH"' >> ~/.bash_profile; fi

script:
    - if [[ "${COVERITY_SCAN_BRANCH}" == 1 ]];
      then
          echo "Don't build on coverty_scan branch.";
          exit 0;
      fi
    - mkdir build && cd build
    - cmake ..
    - make -s

notifications:
    email: false
    
git:
    depth: 10

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "GgrtWt/clDdtwXqskht7xL3alVRPm/+VriSwtr0KGkMTeDpXvUbRx+rzyaUJS+HBr2aikOWqp8laSNRy5HRNlJg5ns6MBDj+0zDm964IfhFWmYzbWcjoa8H1elQVUlAtaghdUJIrgV8yqhQL0KkE3MBTWyIfL3kcPaHinW4eI6UeeNge0+0Gk98Xl7BfEfSuzywmjzxp2VYU7C1BUCncFx5+PRTfdy1Ozq97BU/kDQGejXGVR4NAP4ER65w3HMd7NjRKalTZZALTcJp7F1cPOk1jC6UGYoCDD7FVTN8ukm7MCvHWAHP/FfFq9DtWwhppIWnKnYtbPyOyKd2NlY9YgllpKKWlnbO+SUy+7jmoThsQeSiFOTEwx3zP7fKv/QDSqj+vm1miLBRcoE9PfS719h514eQLvK2PUcblkjJSznt6IJyDUJ6TtXv/L5Bep9VKUCV/B6jvKdDh/tsVB5m9qHG7Bz9thk4OnlGJ56TbEh4OdZFVSR1INDgpIlC/ZeoQhU61MEjFqeuvZ42MJxPwURHz40aMfmcGwO3VPdVzVkxxidaH4nIGf2qPjh1aLDrpn7biesGlnZBHOInppMuZYGd/cHDiPHLh3YgmA3uJtTZ11KjCMucemwQ/zviMk++MTBqL+d8vRcS4sXbc0mNziFfNROWhMsYXWF3IFKQVeLE="

before_install:
      - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca- ;fi

addons:
  coverity_scan:
    project:
      name: "did-g/XyGrib"
      description: "Build submitted via Travis CI"
    notification_email: didier@users.sourceforge.net
    build_command_prepend: "mkdir build_s && cd build_s && cmake -DCMAKE_BUILD_TYPE=Debug ../"
    build_command:   "make -s"
    branch_pattern: dev
